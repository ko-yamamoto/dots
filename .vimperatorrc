command! -nargs=+ lazy autocmd VimperatorEnter .* <args>

" ======================================================================
" prefs
" ======================================================================
let mapleader = ","


" ======================================================================
" options
" ======================================================================

" ページのアクセスキーを無効化
set! ui.key.generalAccessKey=0

" Awesomebarの補完対象にBookmarkletを含める
set! browser.urlbar.filter.javascript=false

" ポップアップ許可数を拡張 cf.http://la.ma.la/blog/diary_200611171115.htm
set! dom.popup_maximum=9999

" /,? 検索結果をハイライト
set hlsearch

" :[tab]open の補完対象と順番
set complete=tbh
" 自動補完しない　タブで補完開始
set autocomplete=false

" ブラウザタイトルの変更
set titlestring=vimp!

" GUI Options
set toolbars=nomenu,noaddons,nobookmarks,nonavigation

" ヒントではアルファベット使用
set hintchars="dfghjkvbnmrtui"

" ヒントのタイムアウト時間(ms)
set hinttimeout=700

" ステータスラインに表示する内容
set status=input,location,position

" タブを非表示
"set showtabline=0

" リンクのURIをコマンドラインに表示
set showstatuslinks=2

" ページロード時にテキストボックスにフォーカスするのを防ぐ
set focuscontent

" migemo_completion
"set hintmatching=custom

" Beep設定
set visualbell
hi Bell display: none;

" エディタ設定
set editor='/usr/local/bin/mvim -f'

" undoの数
set! browser.sessionstore.max_tabs_undo=50

" Cache位置変更
set! browser.cache.disk.parent_directory=/Volumes/RamDisk/FirefoxCache/

" ポップアップウィンドウは新窓で
set popups=resized


"+----------------------------------------------------------------------------------------+
" キーマップ設定
"+----------------------------------------------------------------------------------------+

" C-gでEsc
cmap <C-g> <Esc>

" Uで最近閉じたタブ表示
map U :u<Space>

"yで選択範囲をコピー
map y :echo 'Yank!'<CR>Y

" コマンドライン、テキストエリア内ではC-v,C-xで貼付/切取
cnoremap <C-p> <S-Insert>
inoremap <C-p> <S-Insert>
cnoremap <C-x> <S-Del>
" inoremap <C-x> <S-Del>

"j/kの移動量を5倍に
map j 5<C-e>
map k 5<C-y>

"<BS>で「戻る」
map <BS> H

"<A-Left>/<A-Right>かh/lでタブ移動
map <A-Left> <C-p>
map <A-Right> <C-n>
map h <C-p>
map l <C-n>


"現在のタブを閉じる(直前のタブにフォーカスしないことへの暫定対応)
"for Win
"map d <C-w>
"for Mac
map d <M-w>


"<S-Left>/<S-Right>で現在のタブの位置変更
map <S-Left>  :tabmove! -1<CR>
map <S-Right> :tabmove! +1<CR>

"command+rでFirefoxを再起動
map <C-r> :restart<CR>

"<C-h>でヘルプを表示
map <C-h> :help<CR>

" caret-hint.js
map <C-c> ;c

map t :tabopen<Space>g<Space>
map o :open<Space>g<Space>

" ======================================================================
" plugins
" ======================================================================
" appendAnchor.js
let g:auto_append_anchor = "true"
let g:auto_append_anchor_once = "true"

" twittperator.js
" ChirpUserStream を使う？
let g:twittperator_use_chirp = 1
" コマンドラインに tweet をリアルタイム(?)に表示
let g:twittperator_plugin_echo_tweet = 1
let g:twittperator_screen_name = "nishikawasasaki"
let g:twittperator_history_limit = 1000
"twitter用キー
map <Leader>tf :tw<CR>
map <Leader>tp :tw<Space>
map <Leader>tr :tw @

" ime_controller.js
" let g:textarea_ime_mode = "inactive"
let g:ex_ime_mode = "inactive"


" copy.js
map c :copy<Space>
map <Leader>cg :copy<Space>ggl<CR>

javascript <<EOF
liberator.globalVariables.copy_templates = [
{ label: 'ggl', value: 'Copy title & goo.gl', custom: function() { return '「' +  buffer.title + '」 ' + getShortUrl();} },
{ label: 'titleAndURL',    value: '"%TITLE%" %URL%' },
{ label: 'title',          value: '%TITLE%' },
{ label: 'URL',            value: '%URL%' }
];

var getShortUrl = function() {
  var longUrl = content.document.location.href;

  var googl = {
    'url' : 'https://www.googleapis.com/urlshortener/v1/url',
    'method' : 'POST',
    'contentType' : 'application/json',
    'longJson' : '{ "longUrl" : "' + longUrl + '" }'
  };

  var request = new XMLHttpRequest();
  request.open(googl.method, googl.url, false);
  request.setRequestHeader('Content-Type', googl.contentType);
  request.send(googl.longJson);

  return JSON.parse(request.responseText).id;
};
EOF


" feedSomeKeys_3.js
" Gmail
lazy fmaps -u='^https?://mail\.google\.com/(mail|a)/' c j k n p o u e x s r a # [ ] z ? gi gs gt gd ga gc
" はてブ
lazy fmaps -u='^http://b\.hatena\.ne\.jp/(?!(entry|articles|guide))' j k o,oj e a,b


"" hatenabookmark
" https://github.com/hatena/hatena-bookmark-xul/wiki/Vimperator-%E3%81%A7%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AF%E6%8B%A1%E5%BC%B5%E3%82%92%E4%BD%BF%E3%81%86
javascript <<EOF
// キーボードショートカットの指定
// 空(null)を指定すれば hints や nnoremap を上書きしなくなる
liberator.globalVariables.hBookmark_shortcuts = {
    hintsAdd     : 'A',
    hintsComment : 'X',
    add          : ['A'],
    comment      : ['X'],
};
EOF

javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
nnoremap s :hbt<Space>
nnoremap S :hbtc<Space>
set complete+=H


" tombloo.js
nnoremap x :tombloo! Link<CR>

" piyo-ui.js
nnoremap <C-u> :piyo tab closetab-mru history -input=

" ======================================================================
" みためのせってい
" ======================================================================
colorscheme RedNS

" statusline-toolbar.js
set statuslinetoolbars=feed-button,star-button

" タブに閉じるボタンを表示
set browser.tabs.closeButtons=3


" ======================================================================
" highlight/style
" ======================================================================



" vim: set ft=vimperator:
