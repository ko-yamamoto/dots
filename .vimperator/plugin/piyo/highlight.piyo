// vim:set ft=javascript sw=4 ts=4 et :

ui.registerSource("highlight", {
    description: "highlight list",
    title: "highlight list",
    createRoot: function () <table style="border-collapse:collapse;">
<caption class="title"/><style><![CDATA[
.demo {
    display: inline-block !important;
    position: static !important;
    margin: 0px !important; padding: 0px !important;
    width: 4em !important; min-width: 4em !important; max-width: 4em !important;
    height: 1em !important; min-height: 1em !important; max-height: 1em !important;
    overflow: hidden !important;
    box-shadow: 0 0 3px;
}
]]></style><tbody class="content"/></table>,
    createView: function (item, hi)
        <tr><td class="mark"/><td class="nw">{hi.class}</td><td><span class="demo" style={item.value}>abcABC</span></td><td>{hi.value}</td></tr>,
    keys: ["class", "value"],
    generator: function () (h for(h in highlight)),
    commands: function (commands) {
        commands.add(["se[t]"], "!set highlight", function (args, modifiers) {
            let hi = modifiers.items[0].item;
            highlight.set(hi.class, args[0], false, "-append" in args);
        }, {
            literal: 0,
            options:[
                [["-append", "-a"], commands.OPTION_NOARG]
            ],
            completer: function (context, args) {
                let ui = context.top.getCache("piyo", Object).ui;
                let hi = ui.selectedItem.item;
                context.completions = [[hi.value, "Current"], [hi.default, "Default"]];

                let q = plugins.completeQueryselector;
                if (q) {
                    q.completeStyle(context.fork("style", 0));
                }
            }
        });
    }
});
