// vim:set ft=javascript sw=4 ts=4 et :

const query = <![CDATA[
SELECT id, target, name, source, state, startTime, endTime, referrer,
currBytes, maxBytes, state
FROM moz_downloads
ORDER BY (state <> 0), endTime DESC, startTime DESC
]]>.toString();


function e4xProgress(value)
    <div style="position:relative;padding:0;margin:0;width:10ex;display:inline-block;"><table border="0" cellspacing="0" style="border:0;width:100%;"><tr style="position:relative;height:1em;"><td style={"min-height:1em;background-color:#afa;width:"+value+"%;"}/><td align="right" style="background-color:#ccc;padding:0;"><div style="position:absolute;right:0;font-size:1em;top: 0;">{value}%</div></td></tr></table></div>
ui.registerSource("download", {
    description: "download list",
    title: "dowload list",
    keys: ["name"],
    createView1: function (item, hi) <tr style="vertical-align: top;"><td class="mark"/><td><img src={"moz-icon://"+item.target+"?size=64"}/></td>
    <td><br/><span style="position: absolute; white-space: nowrap;color:blue;">{item.source}</span></td>
    <td>{item.id}</td><td style="color:green;">{(new Date(item.endTime/1000)).toLocaleFormat("%y%m%d")}</td>
    <td>{1.0*item.currBytes/item.maxBytes*100}%</td><td>{item.state}</td><td>{hi.name}</td>
    </tr>,
    createView: function (item, hi) <tr style="vertical-align: top;"><td class="mark"/><td><img src={"moz-icon://"+item.$.target.spec+"?size=64"}/></td>
    <td><br/><span style="position: absolute; white-space: nowrap;color:blue;">{item.$.source.spec}</span></td>
    <td>{item.$.id}</td><td style="color:green;">{(new Date(item.$.startTime/1000)).toLocaleFormat("%y%m%d")}</td>
    <td align="right">{item.$.percentComplete}%</td><td>{item.$.state}</td><td>{hi.name}</td>
    </tr>,
    createView: function (item, hi) <tr style="vertical-align: top;"><td class="mark"/><td><img src={"moz-icon://"+item.$.target.spec+"?size=64"}/></td>
    <td><br/><span style="position: absolute; white-space: nowrap;color:blue;">{item.$.source.spec}</span></td>
    <td>{item.$.id}</td><td style="color:green;">{(new Date(item.$.startTime/1000)).toLocaleFormat("%y%m%d")}</td>
    <td align="right">{e4xProgress(item.$.percentComplete)}</td><td>{item.$.state}</td><td>{hi.name}</td>
    </tr>,
    generator1: function () {
        return sqlquery(gDownloadMgr.DBConnection, query);
    },
    generator: function () {
        let proto = {
            get $() this.item,
            get name() this.item.displayName
        };
        for (let q in util.sqlquery(gDownloadMgr.DBConnection, query)) {
            yield {__proto__: proto, item: gDownloadMgr.getDownload(q.id)};
        }
    },
    commands: function (commands) {
        ["cancel", "remove", "pause", "resume", "retry"].forEach(function (n) {
            commands.add([n], n + " download", function (args, modifiers) {
                modifiers.items.forEach(function (i) {
                    gDownloadMgr[n + "Download"](i.item.item.id);
                });
            });
        });
        commands.add(["opend[ir]"], "!open directory", function (args, modifiers) {
            let file = modifiers.items[0].item.item.targetFile;
            file.parent.QueryInterface(Ci.nsILocalFile).reveal();
        });
    }
});
