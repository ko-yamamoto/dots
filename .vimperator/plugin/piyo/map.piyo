// vim:set ft=javascript sw=4 ts=4 et :

ui.registerSource("maps", {
	title: "map list",
	description: "map list",
    keys: ["mode", "name", "description", "type"],
	createView: function (item, hi)
		<tr><td class="mark"/><td>{hi.mode}</td><td>{item.chars}</td><td style={item.style}>{hi.name}</td><td>{item.names}</td><td>{hi.description}</td></tr>,
	generator: function () {
        let cache = [];
        let proto = {
            get mode() this.item.modes.map(function (n) let(m=modes.getMode(n)) m ? m.name : (n === 0 ? "NONE" : "?")),
            //get mode() this.item.modes.join(","),
            get name() this.item.names,
            get names() this.item.names.join(","),
            get description() this.item.description + " " + (this.item.rhs || ""),
            get style() this.type === "_main" ? "color: blue": "",
            get chars() this.item.modes.map(function (n) let(m=modes.getMode(n)) m ? (m.char || n) : "?").join(" "),
        };
        for (let [, type] in Iterator(["_main", "_user"]))
            for (let [, maps] in Iterator(mappings[type])) {
                if (!maps) continue;

                for (let [,map] in Iterator(maps)) {
                    if (cache.indexOf(map) >= 0) continue;
                    yield {__proto__: proto, type: type, item: map};
                }
                cache = cache.concat(maps);
            }
	},
});
